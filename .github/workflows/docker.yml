on:
  push:
    paths:
      - 'FastAPI/**'
      - 'flask-frontend/**'
      - 'go-backend-mongodb/**'
      - 'react-frontend/**'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set-matrix
        run: |
          services=()
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}) =~ 'FastAPI/' ]]; then
            services+=("fastapi")
          fi
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}) =~ 'flask-frontend/' ]]; then
            services+=("flask-frontend")
          fi
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}) =~ 'go-backend-mongodb/' ]]; then
            services+=("go-backend")
          fi
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}) =~ 'react-frontend/' ]]; then
            services+=("react-frontend")
          fi

          # Remove leading spaces before elements in the array
          services=("${services[@/#*/}")

          # Ensure at least one service is detected to avoid unnecessary job runs
          if [[ ${#services[@]} -gt 0 ]]; then
            echo "matrix=[\"$(printf '%s",' "${services[@]}")\"]" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-changes
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && fromJSON(needs.check-changes.outputs.matrix)[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.check-changes.outputs.matrix) }}
      fail-fast: false
    name: Build and Push ${{ matrix.service }} Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set build context and dockerfile path
        id: set-build-context
        run: |
          case ${{ matrix.service }} in
            "fastapi")
              echo "context=./FastAPI" >> $GITHUB_OUTPUT
              ;;
            "flask-frontend")
              echo "context=./flask-frontend" >> $GITHUB_OUTPUT
              ;;
            "go-backend")
              echo "context=./go-backend-mongodb" >> $GITHUB_OUTPUT
              ;;
            "react-frontend")
              echo "context=./react-frontend" >> $GITHUB_OUTPUT
              ;;
          esac
      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.set-build-context.outputs.context }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
          cache-to: type=inline
